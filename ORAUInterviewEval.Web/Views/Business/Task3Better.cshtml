@model Task3ViewModel
@using ORAUInterviewEval.Core.Interfaces
@using ORAUInterviewEval.Infrastructure.ViewModels


@inject ICacheService cacheService

@{
	ViewData["Title"] = "Task 3 - Save Comment";


	var programOptions = new SelectList(cacheService.GetPrograms(), "Key", "Value");
}


<div class="container">


	<div class="row">
		<div class="col-lg-8 offset-lg-2 mb-5">
			<h1 class="border-bottom">@ViewData["Title"]</h1>
			<div class="card">
				<div class="card-body">
					<h2>Requirements</h2>
					<p>
						When the "Save Comment" button is clicked save the comment without refreshing the page.
					</p>
					<ul>
						<li>Use AJAX to save the comment</li>
						<li>Show a javascript alert that says "Comment Saved." on success</li>
						<li>Show in red text below the comment field a validation message for: comment is required and must be under 100 characters on button click</li>
						<li>Save the comment to TaskService.SaveComment after validating server side the comment is not empty or over 100 characters</li>
					</ul>
				</div>
			</div>
		</div>
	</div>


	<div class="row">
		<div class="col-lg-8 offset-lg-2">
			<div class="card">
				<div class="card-body">
						

					<div class="form-group">
						<label asp-for="Comment" class="form-label"></label>
                        <textarea asp-for="Comment" rows="6" class="form-control" aria-required="true" ></textarea>
						<span class="text-muted"><span id="charCount">0</span>/100 characters</span> <br />
						<span id="CommentValidation" class="text-danger"></span>
					</div>

					<div class="row">
						<div class="col-md-5">
							<button id="SaveCommentButton" class="btn-primary btn btn btn-block my-2">Save</button>
						</div>							
					</div>
                </div>
			</div>
		</div>
	</div>



</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial"/>

    <script type="text/javascript">
		//UI Elements
		var commentInput = $("#@Html.IdFor(m => m.Comment)");
		var charCountDisplay = $("#charCount");
		var saveButton = $("#SaveCommentButton");
		var commentValidation = $("#CommentValidation");
		
		// Functions
		function setSaveEnable(){
			var characterCount = commentInput.val().length
			if(characterCount == 0){
				saveButton.attr("disabled", true);
			}else{
				saveButton.attr("disabled", false);
			}
		}
		
		function SaveCommentCallBack(response){
			if (response.succeeded){
				alert(response.result);
			}
			if (response.status==400){
				commentValidation.text(response.responseJSON.errors["Comment"]);
			}
		}
		
		function SaveComment(){
			var requestBody = {
				comment: commentInput.val()
				//comment: null
				//comment: "01234567891123456789212345678931234567894123456789512345678961234567897123456789812345678991234567890"
			};
			commentValidation.text("");
			$.post({
				url: "@Url.Action("Task3", "BusinessApi")",
				data: JSON.stringify(requestBody),
				success: SaveCommentCallBack,
				contentType: 'application/json'
			}).fail(SaveCommentCallBack);
		}
		
		// Events
		saveButton.click(SaveComment)
		commentInput.keyup(function () {
			var characterCount = commentInput.val().length
			charCountDisplay.text(characterCount);
			setSaveEnable();
		});		
		$(document).ready(setSaveEnable);
	</script>
}
